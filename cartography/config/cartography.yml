# Cartography Configuration for Graph RAG System

neo4j:
  uri: ${NEO4J_URI:-bolt://neo4j:7687}
  auth:
    username: ${NEO4J_USER:-neo4j}
    password: ${NEO4J_PASSWORD:-password}
  options:
    max_connection_lifetime: 3600
    max_connection_pool_size: 50
    connection_timeout: 30
    connection_acquisition_timeout: 60
    trust: TRUST_ALL_CERTIFICATES

sync:
  # Sync configuration
  type: ${CARTOGRAPHY_SYNC_TYPE:-INCREMENTAL}
  concurrency: ${CARTOGRAPHY_CONCURRENCY:-50}
  update_tag: ${UPDATE_TAG:-UPDATE_TAG}
  batch_size: 1000
  
  # Module configuration
  modules:
    - cartography.intel.gcp:
        enabled: true
        options:
          projects: ["*"]
          compute:
            enabled: true
            instance_tags: true
            network_tags: true
          storage:
            enabled: true
            analyze_object_acls: true
          iam:
            enabled: true
            service_accounts: true
            custom_roles: true
          asset:
            enabled: true
            asset_types:
              - compute.googleapis.com/Instance
              - compute.googleapis.com/Network
              - storage.googleapis.com/Bucket
              - iam.googleapis.com/ServiceAccount
              - cloudkms.googleapis.com/CryptoKey
    
    - cartography.intel.gsuite:
        enabled: true
        options:
          groups: true
          users: true
          
    - cartography.intel.aws:
        enabled: false
    - cartography.intel.github:
        enabled: false
    - cartography.intel.okta:
        enabled: false

# Vector store configuration for graph embeddings
vector_store:
  type: qdrant
  host: qdrant
  port: 6333
  collection_name: graph_embeddings
  dimension: 1536  # OpenAI embedding dimension
  options:
    distance: Cosine
    on_disk_payload: true
    optimize_storage: true
    vectors_on_disk: true
    replication_factor: 1
    write_consistency_factor: 1

# Cache configuration
cache:
  type: redis
  host: redis
  port: 6379
  db: 0
  options:
    max_memory: "256mb"
    max_memory_policy: "allkeys-lru"
    key_prefix: "cartography:"
    timeout: 300
    retry_on_timeout: true
    socket_keepalive: true

# Analysis configuration
analysis:
  enabled: true
  shortestpath:
    enabled: true
    max_depth: 4
    algorithms:
      - dijkstra
      - astar
  centrality:
    enabled: true
    algorithms:
      - betweenness
      - pagerank
  clustering:
    enabled: true
    algorithms:
      - louvain
      - label_propagation
  similarity:
    enabled: true
    metrics:
      - cosine
      - jaccard

# Reporting configuration
reporting:
  output_directory: /reports
  formats:
    - json
    - html
    - csv
  schedule:
    enabled: true
    interval: 24h
  alerts:
    enabled: true
    channels:
      - type: webhook
        url: ${ALERT_WEBHOOK_URL:-}
      - type: email
        recipients: ${ALERT_EMAIL_RECIPIENTS:-}

# Logging configuration
logging:
  level: INFO
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  handlers:
    file:
      enabled: true
      path: /logs/cartography.log
      max_bytes: 10485760
      backup_count: 5
    console:
      enabled: true
      format: '%(levelname)s: %(message)s'
